#version 430

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D imgOutput;

layout(std430, binding = 1) buffer Particles {
	vec2 u_Particles[4];
};

layout(std430, binding = 2) buffer LevelInfos {
	ivec2 u_Size;
	uint u_ParticleCount;
};

void main() {
	ivec2 x = ivec2(gl_GlobalInvocationID.xy);

	/*vec4 color = imageLoad(imgOutput, x);
	imageStore(imgOutput, x, vec4(color.rgb, 1.0));*/

	uint index = x.y;
	if(index >= u_ParticleCount)
		return;

	vec2 uv = u_Particles[index] / vec2(u_Size);
	ivec2 pos = ivec2(u_Particles[index]);

	vec4 p_cell_color = imageLoad(imgOutput, pos);

    imageStore(imgOutput, pos, vec4(0.0, 0.0, 0.3, 1.0) + p_cell_color);
}